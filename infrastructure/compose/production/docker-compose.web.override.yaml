version: '3.7'

services:
  nginx:
    build:
      context: ./tlparser
      dockerfile: ./docker/Dockerfile.nginx.prd
    hostname: nginx
    container_name: nginx
    ports:
      - 1337:${WEB_NGINX_PORT}
    env_file:
    - ./tlparser/env/production/.env.prd.web
    volumes:
      - ./tlparser/certs/production:/etc/nginx/certs:ro/
    healthcheck:
      test: ["CMD-SHELL", "curl -k https://localhost:${WEB_NGINX_PORT}/api/v1/docs"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      back-prod:
        ipv4_address: 172.168.10.8
    links:
      - uvicorn
    depends_on:
      uvicorn:
        condition: service_healthy
    restart: always

  uvicorn:
    build:
      context: ./tlparser
      dockerfile: ./docker/Dockerfile.uvicorn.prd
    entrypoint:
      - ./entrypoint-uvicorn.prd.sh
    hostname: uvicorn
    container_name: uvicorn
    expose:
      - ${WEB_UVICORN_PORT}
    env_file:
    - ./tlparser/env/production/.env.prd.web
    volumes:
      - ./tlparser/certs/production:/code/certs:ro/
    healthcheck:
      test: ["CMD-SHELL", "curl -k https://localhost:${WEB_UVICORN_PORT}/api/v1/docs"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      back-prod:
        ipv4_address: 172.168.10.9
    links:
      - kafka
      - mongo
      - redis
    depends_on:
      kafka:
        condition: service_healthy
      mongo:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: always

  sphinx:
    build:
      context: ./tlparser
      dockerfile: ./docs/nginx/Dockerfile
    hostname: sphinx
    container_name: sphinx
    ports:
      - 7777:${SPHINX_PORT}
    environment:
      - SPHINX_PORT=${SPHINX_PORT}
    volumes:
      - ./tlparser/certs/production:/etc/nginx/certs:ro/
    healthcheck:
      test: ["CMD-SHELL", "curl -k https://localhost:${SPHINX_PORT}"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      back-prod:
        ipv4_address: 172.168.10.10
    restart: always